{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\React\\\\bookStore-project\\\\src\\\\Components\\\\Cart\\\\Checkout.js\",\n  _s = $RefreshSig$();\nimport classes from './Checkout.module.css';\nimport useInput from '../../hooks/use-input';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checkout = props => {\n  _s();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    isValid: enteredNameIsValid,\n    resetValue: resetNameInput,\n    valueInputChangeHandler: nameChangeHandler,\n    valueInputBlurHandler: nameBlurHandler\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredStreet,\n    hasError: streetInputHasError,\n    isValid: enteredStreetIsValid,\n    resetValue: resetStreetInput,\n    valueInputChangeHandler: streetChangeHandler,\n    valueInputBlurHandler: streetBlurHandler\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredPost,\n    hasError: postInputHasError,\n    isValid: enteredPostIsValid,\n    resetValue: resetPostInput,\n    valueInputChangeHandler: postChangeHandler,\n    valueInputBlurHandler: postBlurHandler\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredCity,\n    hasError: cityInputHasError,\n    isValid: enteredCityIsValid,\n    resetValue: resetCityInput,\n    valueInputChangeHandler: cityChangeHandler,\n    valueInputBlurHandler: cityBlurHandler\n  } = useInput(value => value.trim() !== '');\n  const confirmHandler = event => {\n    event.preventDefault();\n    if (!enteredNameIsValid || !enteredStreetIsValid || !enteredPostIsValid || !enteredCityIsValid) {\n      return;\n    } else {\n      setFormIsValid(true);\n    }\n    resetNameInput();\n    resetStreetInput();\n    resetPostInput();\n    resetCityInput();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputHasError ? classes.invalid : classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name and Surname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.invalid,\n      children: \"Name must not be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetInputHasError ? classes.invalid : classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Your Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        onChange: streetChangeHandler,\n        onBlur: streetBlurHandler,\n        value: enteredStreet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), streetInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.invalid,\n      children: \"Street must not be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postInputHasError ? classes.invalid : classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        onChange: postChangeHandler,\n        onBlur: postBlurHandler,\n        value: enteredPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), postInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.invalid,\n        children: \"Invalid Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityInputHasError ? classes.invalid : classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        onChange: cityChangeHandler,\n        onBlur: cityBlurHandler,\n        value: enteredCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), cityInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.invalid,\n      children: \"Invalid City\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        disabled: !formIsValid,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n};\n_s(Checkout, \"NHFGG3UkgldZ9VeLRSDNAkcjIA8=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["classes","useInput","useState","jsxDEV","_jsxDEV","Checkout","props","_s","formIsValid","setFormIsValid","value","enteredName","hasError","nameInputHasError","isValid","enteredNameIsValid","resetValue","resetNameInput","valueInputChangeHandler","nameChangeHandler","valueInputBlurHandler","nameBlurHandler","trim","enteredStreet","streetInputHasError","enteredStreetIsValid","resetStreetInput","streetChangeHandler","streetBlurHandler","enteredPost","postInputHasError","enteredPostIsValid","resetPostInput","postChangeHandler","postBlurHandler","enteredCity","cityInputHasError","enteredCityIsValid","resetCityInput","cityChangeHandler","cityBlurHandler","confirmHandler","event","preventDefault","className","form","onSubmit","children","invalid","control","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","actions","onClick","onCancel","submit","disabled","_c","$RefreshReg$"],"sources":["D:/Web/React/bookStore-project/src/Components/Cart/Checkout.js"],"sourcesContent":["import classes from './Checkout.module.css';\r\nimport useInput from '../../hooks/use-input';\r\nimport { useState } from 'react';\r\n\r\nconst Checkout = (props) => {\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n    const {value: enteredName,\r\n        hasError: nameInputHasError, \r\n        isValid:enteredNameIsValid,\r\n        resetValue: resetNameInput,\r\n        valueInputChangeHandler: nameChangeHandler,\r\n        valueInputBlurHandler: nameBlurHandler} = useInput(value=> value.trim() !=='');\r\n\r\n    const {value: enteredStreet,\r\n        hasError: streetInputHasError, \r\n        isValid:enteredStreetIsValid,\r\n        resetValue: resetStreetInput,\r\n        valueInputChangeHandler: streetChangeHandler,\r\n        valueInputBlurHandler: streetBlurHandler} = useInput(value=> value.trim() !==''); \r\n        \r\n    const {value: enteredPost,\r\n        hasError: postInputHasError, \r\n        isValid:enteredPostIsValid,\r\n        resetValue: resetPostInput,\r\n        valueInputChangeHandler: postChangeHandler,\r\n        valueInputBlurHandler: postBlurHandler} = useInput(value=> value.trim() !==''); \r\n        \r\n    const {value: enteredCity,\r\n        hasError: cityInputHasError, \r\n        isValid:enteredCityIsValid,\r\n        resetValue: resetCityInput,\r\n        valueInputChangeHandler: cityChangeHandler,\r\n        valueInputBlurHandler: cityBlurHandler} = useInput(value=> value.trim() !=='');  \r\n\r\n    const confirmHandler = (event) => {\r\n      event.preventDefault();\r\n\r\n      if (!enteredNameIsValid || !enteredStreetIsValid || !enteredPostIsValid || !enteredCityIsValid){\r\n        return;\r\n      } else{\r\n        setFormIsValid(true);\r\n      }\r\n\r\n      resetNameInput();\r\n      resetStreetInput();\r\n      resetPostInput();\r\n      resetCityInput();\r\n    };\r\n  \r\n    return (\r\n      <form className={classes.form} onSubmit={confirmHandler}>\r\n        <div className= {nameInputHasError? classes.invalid:classes.control}>\r\n          <label htmlFor='name'>Name and Surname</label>\r\n          <input type='text' id='name'\r\n           onChange={nameChangeHandler}\r\n           onBlur={nameBlurHandler}\r\n           value={enteredName}/>\r\n        </div>\r\n        {nameInputHasError && <p className={classes.invalid}>Name must not be empty</p>}\r\n        <div className= {streetInputHasError? classes.invalid:classes.control}>\r\n          <label htmlFor='street'>Your Street</label>\r\n          <input type='text' id='street'\r\n          onChange={streetChangeHandler}\r\n          onBlur={streetBlurHandler}\r\n          value={enteredStreet} />\r\n        </div>\r\n        {streetInputHasError && <p className={classes.invalid}>Street must not be empty</p>}\r\n        <div className= {postInputHasError? classes.invalid:classes.control}>\r\n          <label htmlFor='postal'>Postal Code</label>\r\n          <input type='text' id='postal'\r\n          onChange={postChangeHandler}\r\n          onBlur={postBlurHandler}\r\n          value={enteredPost} />\r\n        {postInputHasError && <p className={classes.invalid}>Invalid Postal Code</p>}  \r\n        </div>\r\n        <div className= {cityInputHasError? classes.invalid:classes.control}>\r\n          <label htmlFor='city'>City</label>\r\n          <input type='text' id='city'\r\n          onChange={cityChangeHandler}\r\n          onBlur={cityBlurHandler}\r\n          value={enteredCity} />\r\n        </div>\r\n        {cityInputHasError && <p className={classes.invalid}>Invalid City</p>}  \r\n        <div className={classes.actions}>\r\n          <button type='button' onClick={props.onCancel}>\r\n            Cancel\r\n          </button>\r\n          <button className={classes.submit} disabled={!formIsValid}>Confirm</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\nexport default Checkout;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}